<?php

/**
 * BaseLaboratorioFabricante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $pais_id
 * @property integer $ciudad_id
 * @property string $nombre
 * @property string $bajo_licencia
 * @property string $para
 * @property string $direccion
 * @property string $telefono
 * @property string $fax
 * @property string $email
 * @property string $observaciones
 * @property Pais $Pais
 * @property Doctrine_Collection $Medicamento
 * @property Doctrine_Collection $DispositivoMedico
 * @property Doctrine_Collection $Cosmetico
 * @property Doctrine_Collection $Higiene
 * @property Ciudad $Ciudad
 * 
 * @method integer               getPaisId()            Returns the current record's "pais_id" value
 * @method integer               getCiudadId()          Returns the current record's "ciudad_id" value
 * @method string                getNombre()            Returns the current record's "nombre" value
 * @method string                getBajoLicencia()      Returns the current record's "bajo_licencia" value
 * @method string                getPara()              Returns the current record's "para" value
 * @method string                getDireccion()         Returns the current record's "direccion" value
 * @method string                getTelefono()          Returns the current record's "telefono" value
 * @method string                getFax()               Returns the current record's "fax" value
 * @method string                getEmail()             Returns the current record's "email" value
 * @method string                getObservaciones()     Returns the current record's "observaciones" value
 * @method Pais                  getPais()              Returns the current record's "Pais" value
 * @method Doctrine_Collection   getMedicamento()       Returns the current record's "Medicamento" collection
 * @method Doctrine_Collection   getDispositivoMedico() Returns the current record's "DispositivoMedico" collection
 * @method Doctrine_Collection   getCosmetico()         Returns the current record's "Cosmetico" collection
 * @method Doctrine_Collection   getHigiene()           Returns the current record's "Higiene" collection
 * @method Ciudad                getCiudad()            Returns the current record's "Ciudad" value
 * @method LaboratorioFabricante setPaisId()            Sets the current record's "pais_id" value
 * @method LaboratorioFabricante setCiudadId()          Sets the current record's "ciudad_id" value
 * @method LaboratorioFabricante setNombre()            Sets the current record's "nombre" value
 * @method LaboratorioFabricante setBajoLicencia()      Sets the current record's "bajo_licencia" value
 * @method LaboratorioFabricante setPara()              Sets the current record's "para" value
 * @method LaboratorioFabricante setDireccion()         Sets the current record's "direccion" value
 * @method LaboratorioFabricante setTelefono()          Sets the current record's "telefono" value
 * @method LaboratorioFabricante setFax()               Sets the current record's "fax" value
 * @method LaboratorioFabricante setEmail()             Sets the current record's "email" value
 * @method LaboratorioFabricante setObservaciones()     Sets the current record's "observaciones" value
 * @method LaboratorioFabricante setPais()              Sets the current record's "Pais" value
 * @method LaboratorioFabricante setMedicamento()       Sets the current record's "Medicamento" collection
 * @method LaboratorioFabricante setDispositivoMedico() Sets the current record's "DispositivoMedico" collection
 * @method LaboratorioFabricante setCosmetico()         Sets the current record's "Cosmetico" collection
 * @method LaboratorioFabricante setHigiene()           Sets the current record's "Higiene" collection
 * @method LaboratorioFabricante setCiudad()            Sets the current record's "Ciudad" value
 * 
 * @package    anbeed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLaboratorioFabricante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('laboratorio_fabricante');
        $this->hasColumn('pais_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('ciudad_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('bajo_licencia', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('para', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('direccion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telefono', 'string', 150, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('fax', 'string', 150, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 150,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('observaciones', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pais', array(
             'local' => 'pais_id',
             'foreign' => 'id'));

        $this->hasMany('Medicamento', array(
             'local' => 'id',
             'foreign' => 'laboratorio_fabricante_id'));

        $this->hasMany('DispositivoMedico', array(
             'local' => 'id',
             'foreign' => 'laboratorio_fabricante_id'));

        $this->hasMany('Cosmetico', array(
             'local' => 'id',
             'foreign' => 'laboratorio_fabricante_id'));

        $this->hasMany('Higiene', array(
             'local' => 'id',
             'foreign' => 'laboratorio_fabricante_id'));

        $this->hasOne('Ciudad', array(
             'local' => 'ciudad_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}
<?php

/**
 * BaseReactivo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $producto_id
 * @property integer $empresa_id
 * @property integer $laboratorio_fabricante_id
 * @property string $nombre_comercial
 * @property string $catalogo
 * @property string $uso
 * @property string $presentacion
 * @property string $conservacion
 * @property string $periodo_validez
 * @property string $componente
 * @property string $registro_sanitario
 * @property Doctrine_Collection $Formulario12
 * @property Producto $Producto
 * @property Empresa $Empresa
 * @property LaboratorioFabricante $LaboratorioFabricante
 * 
 * @method integer               getProductoId()                Returns the current record's "producto_id" value
 * @method integer               getEmpresaId()                 Returns the current record's "empresa_id" value
 * @method integer               getLaboratorioFabricanteId()   Returns the current record's "laboratorio_fabricante_id" value
 * @method string                getNombreComercial()           Returns the current record's "nombre_comercial" value
 * @method string                getCatalogo()                  Returns the current record's "catalogo" value
 * @method string                getUso()                       Returns the current record's "uso" value
 * @method string                getPresentacion()              Returns the current record's "presentacion" value
 * @method string                getConservacion()              Returns the current record's "conservacion" value
 * @method string                getPeriodoValidez()            Returns the current record's "periodo_validez" value
 * @method string                getComponente()                Returns the current record's "componente" value
 * @method string                getRegistroSanitario()         Returns the current record's "registro_sanitario" value
 * @method Doctrine_Collection   getFormulario12()              Returns the current record's "Formulario12" collection
 * @method Producto              getProducto()                  Returns the current record's "Producto" value
 * @method Empresa               getEmpresa()                   Returns the current record's "Empresa" value
 * @method LaboratorioFabricante getLaboratorioFabricante()     Returns the current record's "LaboratorioFabricante" value
 * @method Reactivo              setProductoId()                Sets the current record's "producto_id" value
 * @method Reactivo              setEmpresaId()                 Sets the current record's "empresa_id" value
 * @method Reactivo              setLaboratorioFabricanteId()   Sets the current record's "laboratorio_fabricante_id" value
 * @method Reactivo              setNombreComercial()           Sets the current record's "nombre_comercial" value
 * @method Reactivo              setCatalogo()                  Sets the current record's "catalogo" value
 * @method Reactivo              setUso()                       Sets the current record's "uso" value
 * @method Reactivo              setPresentacion()              Sets the current record's "presentacion" value
 * @method Reactivo              setConservacion()              Sets the current record's "conservacion" value
 * @method Reactivo              setPeriodoValidez()            Sets the current record's "periodo_validez" value
 * @method Reactivo              setComponente()                Sets the current record's "componente" value
 * @method Reactivo              setRegistroSanitario()         Sets the current record's "registro_sanitario" value
 * @method Reactivo              setFormulario12()              Sets the current record's "Formulario12" collection
 * @method Reactivo              setProducto()                  Sets the current record's "Producto" value
 * @method Reactivo              setEmpresa()                   Sets the current record's "Empresa" value
 * @method Reactivo              setLaboratorioFabricante()     Sets the current record's "LaboratorioFabricante" value
 * 
 * @package    anbeed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReactivo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reactivo');
        $this->hasColumn('producto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('laboratorio_fabricante_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('nombre_comercial', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('catalogo', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('uso', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('presentacion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('conservacion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('periodo_validez', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('componente', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('registro_sanitario', 'string', 50, array(
             'type' => 'string',
             'unique' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Formulario12', array(
             'local' => 'id',
             'foreign' => 'reactivo_id'));

        $this->hasOne('Producto', array(
             'local' => 'producto_id',
             'foreign' => 'id'));

        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('LaboratorioFabricante', array(
             'local' => 'laboratorio_fabricante_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}